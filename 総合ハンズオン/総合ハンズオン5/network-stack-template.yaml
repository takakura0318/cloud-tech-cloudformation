AWSTemplateFormatVersion: '2010-09-09'
Description: 'hands-on1'
#----------------------------------------------------------------
# パラメーター
#----------------------------------------------------------------
Parameters:
  # プロジェクト名を入力する。各リソースのNameタグで参照する
  EnvironmentName:
    Description: hands-on1-template
    Type: String

  # VPCのCIDRレンジ
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/21

  # パブリックサブネット1
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.0.0/24

  # パブリックサブネット2
  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.1.0/24

  # プライベートサブネット1
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.2.0/24

  # プライベートサブネット2
  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.3.0/24

#----------------------------------------------------------------
# リソース
#----------------------------------------------------------------
Resources:
  #----------------------
  # VPC作成
  #----------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      # 何の設定かわからないが、基本的にtrueにしても良さそう
      EnableDnsSupport: true
      EnableDnsHostnames: false
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  #----------------------
  # Publicサブネット作成
  #----------------------
  # パブリックサブネット1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # AZ-1a
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PublicSubnet1CIDR
      # サブネットで起動されたインスタンスが起動時にパブリック IP アドレスを設定するかどうか
      # Publicサブネットなのでtrueにする
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet

  # パブリックサブネット2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # AZ-1c
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet
  #----------------------
  # Privateサブネット作成
  #----------------------
  #プライベートサブネット1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # AZ-1a
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PrivateSubnet1CIDR
      # Privateサブネットなのでfalseにする
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

  #プライベートサブネット2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      # AZ-1c
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PrivateSubnet2CIDR
      # Privateサブネットなのでfalseにする
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

  #----------------------
  # IGW作成
  #----------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  #----------------------
  # IGWをVPCにアタッチする
  #----------------------
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  #----------------------
  # ルートテーブル作成 （Publicサブネット用）
  #----------------------
  # ルートテーブル（Publicサブネット用）作成
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  # 上記のルートテーブルに、レコードを追加する
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      # IGW用のレコードを追加する
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Publicサブネット1に、上記ルートテーブルを関連付ける
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  # Publicサブネット2に、パブリックサブネット用ルートテーブルを関連付ける
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  #----------------------
  # RDSサブネットグループ作成
  #----------------------
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet Group for RDS instances"
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      DBSubnetGroupName: my-rds-subnet-group
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName} RDS Subnet Group"

  #----------------------
  # Route 53ホストゾーン作成
  #----------------------
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: aws-dev-lab-demo.shop

#----------------------
# エクスポート
#----------------------
Outputs:
  VPCId:
    Value: !Ref VPC
    Description: "VPC ID"
    Export:
      Name: !Sub "${EnvironmentName}-VPCId"

  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
    Description: "PublicSubnet1"
    Export:
      Name: !Sub "${EnvironmentName}-PublicSubnet1Id"

  PublicSubnet2Id:
    Value: !Ref PublicSubnet2
    Description: "PublicSubnet2"
    Export:
      Name: !Sub "${EnvironmentName}-PublicSubnet2Id"

  RdsSubnetGroupId:
    Value: !Ref RdsSubnetGroup
    Description: "RDS Subnet Group Name"
    Export:
      Name: !Sub "${EnvironmentName}-RdsSubnetGroupId"

  HostedZoneId:
    Description: "The HostedZone ID"
    Value: !Ref HostedZone
    Export:
      Name: !Sub "${EnvironmentName}-HostedZoneId"